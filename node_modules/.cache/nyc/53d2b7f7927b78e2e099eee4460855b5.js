var cov_1kwyovyecs=function(){var path="/home/hugo/Documentos/node-projct/api-node/app/routes.js",hash="8f9ffeb5a78e7a2739f49fcc86741012c58ac4f9",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/hugo/Documentos/node-projct/api-node/app/routes.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:19},end:{line:2,column:41}},"2":{start:{line:4,column:15},end:{line:4,column:31}},"3":{start:{line:6,column:23},end:{line:6,column:52}},"4":{start:{line:8,column:20},end:{line:8,column:47}},"5":{start:{line:10,column:0},end:{line:10,column:25}},"6":{start:{line:15,column:0},end:{line:15,column:58}},"7":{start:{line:16,column:0},end:{line:16,column:58}},"8":{start:{line:21,column:0},end:{line:21,column:27}},"9":{start:{line:26,column:0},end:{line:26,column:63}},"10":{start:{line:27,column:0},end:{line:27,column:56}},"11":{start:{line:28,column:0},end:{line:28,column:53}},"12":{start:{line:33,column:0},end:{line:33,column:64}},"13":{start:{line:34,column:0},end:{line:34,column:69}},"14":{start:{line:40,column:0},end:{line:40,column:59}},"15":{start:{line:41,column:0},end:{line:41,column:66}},"16":{start:{line:46,column:0},end:{line:46,column:60}},"17":{start:{line:48,column:0},end:{line:52,column:3}},"18":{start:{line:49,column:2},end:{line:49,column:26}},"19":{start:{line:51,column:2},end:{line:51,column:17}},"20":{start:{line:54,column:0},end:{line:54,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:48,column:22},end:{line:48,column:23}},loc:{start:{line:48,column:36},end:{line:52,column:1}},line:48}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const express=(cov_1kwyovyecs.s[0]++,require('express'));const requireDir=(cov_1kwyovyecs.s[1]++,require('require-dir'));const routes=(cov_1kwyovyecs.s[2]++,express.Router());const authMiddleware=(cov_1kwyovyecs.s[3]++,require('./middlewares/auth'));const controllers=(cov_1kwyovyecs.s[4]++,requireDir('./controllers'));cov_1kwyovyecs.s[5]++;console.log(controllers);/**
 * Auth
 */cov_1kwyovyecs.s[6]++;routes.post('/signin',controllers.authController.signin);cov_1kwyovyecs.s[7]++;routes.post('/signup',controllers.authController.signup);/**
 * Auth middleware
 */cov_1kwyovyecs.s[8]++;routes.use(authMiddleware);/**
 * Users
 */cov_1kwyovyecs.s[9]++;routes.get('/users/myself',controllers.userController.myself);cov_1kwyovyecs.s[10]++;routes.put('/users',controllers.userController.update);cov_1kwyovyecs.s[11]++;routes.get('/feed',controllers.userController.feed);/**
 * Follows
 */cov_1kwyovyecs.s[12]++;routes.post('/follow/:id',controllers.followController.create);cov_1kwyovyecs.s[13]++;routes.delete('/unfollow/:id',controllers.followController.destroy);/**
 * Tweets
 */cov_1kwyovyecs.s[14]++;routes.post('/tweets',controllers.tweetController.create);cov_1kwyovyecs.s[15]++;routes.delete('/tweets/:id',controllers.tweetController.destroy);/**
 * Likes
 */cov_1kwyovyecs.s[16]++;routes.post('/like/:id',controllers.likeController.toggle);cov_1kwyovyecs.s[17]++;routes.get('/tweets',(req,res)=>{cov_1kwyovyecs.f[0]++;cov_1kwyovyecs.s[18]++;console.log(req.userId);cov_1kwyovyecs.s[19]++;res.send('OK');});cov_1kwyovyecs.s[20]++;module.exports=routes;